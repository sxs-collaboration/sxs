name: tests

on:
  push:
    branches:
      - main
    tags: ['*']
  pull_request:

concurrency:
  group: test-${{ github.head_ref }}
  cancel-in-progress: true

env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"

jobs:

  build:
    name: Python ${{ matrix.python-version }} on ${{ startsWith(matrix.os, 'macos-') && 'macOS' || startsWith(matrix.os, 'windows-') && 'Windows' || 'Linux' }}

    runs-on: ${{ matrix.os }}

    if: >-
        !contains(github.event.head_commit.message, '[skip ci]')
        && !contains(github.event.head_commit.message, '[skip tests]')

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.10', '3.13']
        exclude:
          - os: windows-latest
            python-version: '3.13'

    steps:
      - name: Skip replicates on main branch
        env:
          skip_replicates: ${{ github.ref == 'refs/heads/main' && matrix.os != 'ubuntu-latest' }}
        shell: bash
        run: |
          echo "skipping_build_and_test_replicate=${skip_replicates}" >> $GITHUB_ENV

      - name: Cache sxs file storage
        if: ${{ env.skipping_build_and_test_replicate != 'true' }}
        uses: actions/cache@v4
        with:
          key: sxs-${{ runner.os }}-python${{ matrix.python-version }}
          path: |
            ~/.sxs
          restore-keys: |
            sxs-${{ runner.os }}-
            sxs-

      - name: Set up Julia
        if: ${{ env.skipping_build_and_test_replicate != 'true' }}
        uses: julia-actions/setup-julia@v2

      - name: Cache Julia
        if: ${{ env.skipping_build_and_test_replicate != 'true' }}
        uses: julia-actions/cache@v2

      - name: Check out code
        if: ${{ env.skipping_build_and_test_replicate != 'true' }}
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        if: ${{ env.skipping_build_and_test_replicate != 'true' }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Hatch
        if: ${{ env.skipping_build_and_test_replicate != 'true' }}
        run: python -m pip install --disable-pip-version-check --upgrade hatch

      - name: Run tests
        if: ${{ env.skipping_build_and_test_replicate != 'true' }}
        run: hatch run python -c 'import sxs; print(sxs.sxs_directory("cache"))'

