[project]
name = "sxs"
version = "2022.4.5"
description = "Interface to data produced by the Simulating eXtreme Spacetimes collaboration"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
authors = [
  { name = "Michael Boyle", email = "michael.oliver.boyle@gmail.com" },
]
dependencies = [
  "numpy >=1.20",
  "scipy >=1.0",
  "numba >=0.55; implementation_name == 'cpython'",
  "quaternionic >=1.0",
  "spherical >=1.0",
  "h5py >=3",
  "inflection >=0.5.1",
  "requests >=2.24.0",
  "tqdm >=4.63.1",
  "pytz >=2020.1",
  "urllib3 >=1.25.10",
  "pandas >=1.1.2",
  "pylatexenc >=2.7",
  "feedparser >=6.0.1",
  "caltechdata-api >=0.3.0",
]

[project.urls]
Documentation = "https://sxs.readthedocs.io/en/main/"
"Source code" = "https://github.com/sxs-collaboration/sxs"


[tool.hatch.envs.default]
dependencies = [
  "pytest",
  "pytest-cov",
  "pytest-forked >=1.3.0"
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"

[tool.hatch.envs.docs]
dependencies = [
  "mkdocs",
  "mkdocstrings-python",
  "mkdocs-material"
]
[tool.hatch.envs.docs.scripts]
build = "mkdocs build --clean --strict"
serve = "mkdocs serve --dev-addr localhost:8000"

[tool.hatch.envs.test]
dependencies = [
  "pytest",
  "pytest-cov",
  "pytest-forked >=1.3.0"
]
[tool.hatch.envs.test.scripts]
test = "pytest"

[project.optional-dependencies]
docs = [
  "mkdocs",
  "mkdocstrings-python",
  "mkdocs-material"
]
ecosystem = [
  "ipywidgets >=7.5.1",
  "ipykernel >=5.3.4",
  "jupyter_contrib_nbextensions >=0.5.1",
  "jupyterlab >=2.2.8",
  "line_profiler >=3.0.2",
  "memory_profiler >=0.57.0",
  "matplotlib >=2.1.1",
  "sympy >=1.6.2",
  "corner >=2.1.0",
  "qgrid >=1.3.1",
  "rise >=5.6.1",
  "numpy-quaternion >=0.3.1",
  "spinsfast >=2022; sys_platform != 'win32'",
  "scri >=2020.8.18; sys_platform != 'win32'"
]




[tool.poetry]
name = "sxs"
version = "2022.4.5"
description = "Interface to data produced by the Simulating eXtreme Spacetimes collaboration"
readme = "README.md"
license = "MIT"
authors = ["Michael Boyle <michael.oliver.boyle@gmail.com>"]
homepage = "https://github.com/sxs-collaboration/sxs"
include = ["test"]

[tool.poetry.dependencies]
# Mandatory dependencies
python = ">=3.8,<3.12"
numpy = "^1.20"
scipy = "^1.0"
numba = {version = ">=0.55", markers = "implementation_name == 'cpython'"}
quaternionic = "^1.0"
spherical = "^1.0"
h5py = "^3"
inflection = "^0.5.1"
requests = "^2.24.0"
pytest-forked = "^1.3.0"
tqdm = "^4.48.2, <4.61.2"
pytz = "^2020.1"
urllib3 = "^1.25.10"
pandas = "^1.1.2"
pylatexenc = "^2.7"
feedparser = "^6.0.1"
caltechdata-api = "^0.3.0"
# Optional dependencies, for `extras` section below
ipywidgets = {version = "^7.5.1", optional = true}
ipykernel = {version = "^5.3.4", optional = true}
jupyter_contrib_nbextensions = {version = "^0.5.1", optional = true}
jupyterlab = {version = "^2.2.8", optional = true}
line_profiler = {version = "^3.0.2", optional = true}
memory_profiler = {version = "^0.57.0", optional = true}
matplotlib = {version = ">=2.1.1", optional = true}
sympy = {version = "^1.6.2", optional = true}
corner = {version = "^2.1.0", optional = true}
qgrid = {version = "^1.3.1", optional = true}
rise = {version = "^5.6.1", optional = true}
numpy-quaternion = {version = ">=0.3.1", optional = true}
spinsfast = {version = ">=2022", optional = true, markers = "sys_platform != 'win32'"}
scri = {version = ">=2020.8.18", optional = true, markers = "sys_platform != 'win32'"}


[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^7.0"
pytest-cov = ">=2.10.1"


[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs = ">=1.1.2"
mkdocstrings = {extras = ["python"], version = ">=0.22.0"}
mkdocs-material = ">=9.1.15"


[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
black = ">=22.1"

[tool.poetry.extras]
ecosystem = ["ipywidgets", "ipykernel", "jupyter_contrib_nbextensions", "jupyterlab", "line_profiler", "memory_profiler", "matplotlib", "sympy", "corner", "qgrid", "rise", "quaternion", "scri"]


[tool.black]
line-length = 120
target-version = ['py38','py39','py310']


[tool.pytest.ini_options]
minversion = "6.0"
norecursedirs = ".* build dist *.egg-info install notes ENV"
junit_family="xunit2"
addopts = "-s -v --doctest-glob='' --cov=sxs --cov-branch --cov-report xml"


# [build-system]
# requires = ["poetry-core>=1.0.1"]
# build-backend = "poetry.core.masonry.api"
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
